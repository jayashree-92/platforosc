<?xml version="1.0"?>
<project xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" basedir="." default="cleanAndDeployPackage"> 
 <!-- property settings-->  
  <tstamp>            
     <formatter property="timestamp" pattern="yyMMdd_HHmm"/>
  </tstamp> 
  <property name="CurrentDir" value="${directory::get-current-directory()}" overwrite="false"/>
  <property name="buildDirectory" value="../HedgeMark.Operations.Secure.Web/bin" /> 
  <property name="copyToDirectory" value="../Commons/bin" />
  <property name="Configuration" value="QA" overwrite="false"/>
  <property name="EnableNuGetPackageRestore" value="true" />
  <property name="SolutionFile" value="../HMOSecureWeb.sln"/>   
  <property name="ProjectFile" value="../HedgeMark.Operations.Secure.Web/HMOSecureWeb.csproj"/>   
  <property name="OutputFile1" value="../HedgeMark.Operations.Secure.Web/obj/QA/"/>   
  <property name="sourcePackageLocation" value="\\w001gmn0c\Operations_Secure_Jenkins\Test"/>   
  
  <property name="nant.settings.currentframework" value="net-4.0"/> 
  <property name="UnitTestLocation" value="../HedgeMark.SwiftMessageHandler.Tests/bin" />  
  <property name="MSTest" value="C:\Program Files (x86)\Microsoft Visual Studio 11.0\Common7\IDE\MSTest.exe"/>
  <property name="testResults" value="${CurrentDir}\TestResults"/>  
  <!-- <property name="DevPathToCopyServer1" value="\\W002UYN0C\OPS_Secure_Dev01"/> -->
  <property name="primaryServers" value="  
	  \\W001GMN0C\OPS_Secure_Test01,
	  \\W001GNN0C\OPS_Secure_Test01
  "/>

<!-- <property name="msbuild.args" value="/p:RunOctoPack=true;OctoPackPublishPackageToFileShare=${package.dir}" /> -->
<!-- <property name="msbuild-VS2013" value="C:\Program Files (x86)\MSBuild\12.0\Bin\msbuild.exe" unless="${property::exists('msbuild-VS2013')}"/> -->
	<property name="msbuild-VS2015" value="C:\Windows\Microsoft.NET\Framework\v4.0.30319\MSBuild.exe" unless="${property::exists('msbuild-VS2015')}"/>

  <!-- Target for Building -->
   <target name="Build" >
	<echo message="Clearing the builds and test results.."/>
    <delete dir="${testResults}" failonerror="false" />	
	<msbuild project="${SolutionFile}" >
	  <arg value="/p:Configuration=${Configuration}" />
      <arg value="/t:Clean"/>
    </msbuild>  
    <mkdir dir="${testResults}" />	
   
	<echo message="Building the Application by setting Configuration to '${Configuration}'" /> 
	<msbuild project="${SolutionFile}" > 
	<arg value="/tv:4.0"/> 
	<arg line="/property:Configuration=${Configuration}" /> 
	<arg value="/verbosity:detailed" /> 
	<arg value="/v:minimal" /> 
	</msbuild> 
   
    <copy todir="..\HedgeMark.Operations.Secure.Web\bin\" verbose="true">
	<fileset basedir=".">
		<include name="..\HedgeMark.Operations.Secure.Web\bin\ExternalLibraries\Aspose.Cells.lic"/>
		<include name="..\HedgeMark.Operations.Secure.Web\bin\ExternalLibraries\Aspose.Pdf.lic"/>
	</fileset>
    </copy>  
   </target>  

  <!-- <target name="Build" depends="Clear"> -->
    <!-- <exec program="${msbuild-VS2015}" verbose="true"> -->
        <!-- <arg line='"${SolutionFile}"' /> -->
        <!-- <arg value="/property:Configuration=${Configuration}"/> -->
        <!-- <arg value="/target:Rebuild"/> -->
        <!-- <arg value="${msbuild.args}" if="${property::exists('msbuild.args')}"/> -->
    <!-- </exec> -->
<!-- </target> -->


  <target name="UnitTestBuild"  depends="Build">
    <echo message="Current Directory= '${CurrentDir}'" />
    <exec program ="${MSTest}" basedir="."  verbose="true" failonerror="true" >	   
     <arg value="/testcontainer:${UnitTestLocation}/QA/HedgeMark.SwiftMessageHandler.Tests.dll"/>
     <arg value="/resultsfile:${testResults}\TestResults.trx"/> 
    </exec>
  </target>
  
  <!-- Target for Publishing -->
  <target name="Publish" description="Publish Project" depends="UnitTestBuild" >
    <exec program="${msbuild-VS2015}" failonerror="true">
      <arg value="${ProjectFile}" />
      <arg value="/p:Configuration=${Configuration}" />
      <arg value="/t:_WPPCopyWebApplication" />
      <arg value="/t:TransformWebConfig" />
      <arg value="/p:OutDir=${OutputFile1}" />
      <arg value="/p:WebProjectOutputDir=${OutputFile2}" />
    </exec>
	<copy todir="${OutputFile2}\bin\" verbose="true">
    <fileset basedir=".">
		<include name="..\HedgeMark.Operations.Secure.Web\bin\ExternalLibraries\Aspose.Cells.lic"/>
		<include name="..\HedgeMark.Operations.Secure.Web\bin\ExternalLibraries\Aspose.Pdf.lic"/>
	</fileset>
    </copy>  
  </target>
  
  <!-- Target for SQL Test -->
  <fileset id="SQLFilesTest">
    <include name="SQL.Build" />
	<include name="SQL_Test.Build" />
  </fileset>

  <!-- target for SQL Process, includes files in fileset deployFiles-->
  <target name="SQLBuildTest" depends="Publish">
    <nant>
      <buildfiles refid="SQLFilesTest" />
    </nant>
  </target>
  
  <target name="cleanAndDeployPackage" depends="SQLBuildTest">
	<foreach item="String" in="${primaryServers}" delim="," property="serverToDeploy">
		<echo message="Cleaning up of files from:  ${serverToDeploy}" />
		<delete>
			<fileset basedir="${serverToDeploy}">   
			  <exclude name="***/web.Config" />    
			  <include name="***/*.*" />  
			</fileset>
		</delete>
		<echo message="Copy files from ${sourcePackageLocation} to:  ${serverToDeploy}" />
		<copy todir="${serverToDeploy}" includeemptydirs="false" overwrite="true">
		  <fileset basedir="${sourcePackageLocation}">        
			<exclude name="***/web.Config" />
			<include name="***/*.*" />        
		  </fileset>
		</copy>
	</foreach>
  </target>
   
</project>


